{"version":3,"file":"pfelement.min.js","sources":["../../../node_modules/ie-array-find-polyfill/index.js","../../../node_modules/string-includes-polyfill/string-includes-polyfill.js","../_temp/reveal.js","../_temp/props-and-attrs.js","../_temp/pfelement.js"],"sourcesContent":["'use strict';\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function (predicate) {\n\n            if (this == null) {\n                throw new TypeError('this is null or not defined');\n            }\n\n            var obj = Object(this);\n            var len = obj.length >>> 0;\n\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            var thisArg = arguments[1];\n\n            var index = 0;\n\n            while (index < len) {\n                var iValue = obj[index];\n                if (predicate.call(thisArg, iValue, index, obj)) {\n                    return iValue;\n                }\n                index++;\n            }\n\n            return undefined;\n        }\n    });\n}","if (!String.prototype.includes) {\r\n    String.prototype.includes = function (search, start) {\r\n        'use strict';\r\n        if (typeof start !== 'number') {\r\n            start = 0;\r\n        }\r\n\r\n        if (start + search.length > this.length) {\r\n            return false;\r\n        } else {\r\n            return this.indexOf(search, start) !== -1;\r\n        }\r\n    };\r\n}\r\n","let logger = () => null;\n\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","function parseFunction(value) {\n  try {\n    if (typeof fn === \"string\") {\n      return new Function(`return ${fn}`)();\n    } else if (typeof fn === \"function\") {\n      return fn;\n    } else {\n      return new Function();\n    }\n  } catch (e) {\n    return null;\n  }\n}\n\nexport const propsAndAttrsAPI = {\n  object: {\n    prop: {\n      setter: function(privatePropName, value, onChange) {\n        const oldValue = this[privatePropName];\n        this[privatePropName] = value;\n        if (onChange) onChange(this, oldValue, value);\n      },\n      getter: function(privatePropName) {\n        return this[privatePropName];\n      },\n      define: function(propName, privatePropName, onChange) {\n        if (!privatePropName) {\n          privatePropName = \"_\" + propName;\n        }\n        this[privatePropName] = {};\n        Object.defineProperty(this, propName, {\n          set: v => {\n            propsAndAttrsAPI.object.prop.setter.bind(this)(\n              privatePropName,\n              v,\n              onChange\n            );\n          },\n          get: () =>\n            propsAndAttrsAPI.object.prop.getter.bind(this)(privatePropName),\n          enumerable: true\n        });\n      }\n    },\n    attr: {\n      parse: function(stringValue) {\n        return JSON.parse(stringValue);\n      },\n      onChange: function(propName, attrName, oldValue, newValue) {\n        this[propName] = propsAndAttrsAPI.object.attr.parse.bind(this)(\n          newValue\n        );\n      }\n    }\n  },\n  alias: {\n    prop: {\n      setter: function(aliasedPropName, value) {\n        this[aliasedPropName] = value;\n      },\n      getter: function(aliasedPropName) {\n        return this[aliasedPropName];\n      },\n      define: function(propName, aliasedPropName) {\n        Object.defineProperty(this, propName, {\n          set: v =>\n            propsAndAttrsAPI.alias.prop.setter.bind(this)(aliasedPropName, v),\n          get: () =>\n            propsAndAttrsAPI.alias.prop.getter.bind(this)(aliasedPropName),\n          enumerable: true\n        });\n      }\n    }\n  },\n  boolean: {\n    prop: {\n      setter: function(attrName, value) {\n        if (value) {\n          this.setAttribute(attrName, \"\");\n        } else {\n          this.removeAttribute(attrName);\n        }\n      },\n      getter: function(attrName) {\n        return (\n          this.hasAttribute(attrName) && this.getAttribute(attrName) !== \"false\"\n        );\n      },\n      define: function(propName, attrName) {\n        Object.defineProperty(this, propName, {\n          set: v =>\n            propsAndAttrsAPI.boolean.prop.setter.bind(this)(attrName, v),\n          get: () => propsAndAttrsAPI.boolean.prop.getter.bind(this)(attrName),\n          enumerable: true\n        });\n      }\n    },\n    attr: {\n      onChange: function(oldValue, newValue, onChangeCallback) {\n        // check if the value went from being there to not being there and vice-versa, and if there is an actual function to call\n        if (\n          onChangeCallback &&\n          propsAndAttrsAPI.boolean.attr.hasChanged(oldValue, newValue)\n        ) {\n          onChangeCallback(this, oldValue, newValue);\n        }\n      },\n      hasChanged: (oldValue, newValue) => {\n        const oldValueIsFalse = oldValue == null || oldValue === \"false\";\n        const newValueIsFalse = newValue == null || newValue === \"false\";\n        return oldValueIsFalse !== newValueIsFalse;\n      }\n    }\n  },\n  string: {\n    prop: {\n      setter: function(attrName, value) {\n        if (value != null) {\n          this.setAttribute(attrName, value);\n        } else {\n          this.removeAttribute(attrName);\n        }\n      },\n      getter: function(attrName) {\n        if (this.hasAttribute(attrName)) {\n          return this.getAttribute(attrName);\n        }\n        return null;\n      },\n      define: function(propName, attrName) {\n        Object.defineProperty(this, propName, {\n          set: v => propsAndAttrsAPI.string.prop.setter.bind(this)(attrName, v),\n          get: () => propsAndAttrsAPI.string.prop.getter.bind(this)(attrName),\n          enumerable: true\n        });\n      }\n    }\n  },\n  function: {\n    prop: {\n      // mostly like for object\n      setter: function(privatePropName, value, onChange) {\n        const oldValue = this[privatePropName];\n        this[privatePropName] = value;\n        if (onChange) onChange(this, oldValue, value);\n      },\n      getter: function(privatePropName) {\n        return this[privatePropName];\n      },\n      define: function(propName, privatePropName, onChange) {\n        if (!privatePropName) {\n          privatePropName = \"_\" + propName;\n        }\n        this[privatePropName] = {};\n        Object.defineProperty(this, propName, {\n          set: v => {\n            propsAndAttrsAPI.function.prop.setter.bind(this)(\n              privatePropName,\n              v,\n              onChange\n            );\n          },\n          get: () =>\n            propsAndAttrsAPI.function.prop.getter.bind(this)(privatePropName),\n          enumerable: true\n        });\n      }\n    },\n    attr: {\n      parse: value => parseFunction(value),\n      onChange: function(propName, attrName, oldValue, newValue) {\n        this[propName] = propsAndAttrsAPI.function.attr.parse.bind(this)(\n          newValue\n        );\n      }\n    }\n  },\n  number: {\n    prop: {\n      setter: function(attrName, value) {\n        if (value != null && !isNaN(value)) {\n          this.setAttribute(attrName, value);\n        } else {\n          this.removeAttribute(attrName);\n        }\n      }\n    }\n  }\n};\n\nexport class PropAndAttr {\n  constructor(type, attrName, propName, onChangeCallback) {\n    this.type = type;\n    this.attrName = attrName;\n    this.propName = propName;\n    this.onChangeCallback = onChangeCallback;\n    if (!attrName && !propName) {\n      throw new Error(\n        \"attribute name and property name are not defined. You need to define at least one\"\n      );\n    }\n  }\n\n  get attrIsObserved() {\n    // to be checked\n    return this.attrName && this.onChangeCallback;\n  }\n\n  /**\n   *\n   * @param {PFElement} pfeInstance\n   */\n  instanceConstructorLogic(pfeInstance) {\n    if (this.propName) {\n      this.defineProp(pfeInstance);\n    }\n  }\n\n  /**\n   *\n   * @param {PFElement} pfeInstance\n   */\n  getDefineFn(pfeInstance) {\n    return propsAndAttrsAPI[this.type].prop.define.bind(pfeInstance);\n  }\n\n  /**\n   *  to do: redo for each prop type / class\n   * @param {PFElement} pfeInstance\n   */\n  defineProp(pfeInstance) {\n    this.getDefineFn(pfeInstance)(this.propName);\n  }\n\n  onAttributeChangedLogic(pfeInstance, oldValue, newValue) {\n    this.onChangeCallback(pfeInstance, oldValue, newValue);\n  }\n}\n\nexport class ObjectPropAndAttr extends PropAndAttr {\n  constructor(attrName, propName, onChangeCallback, privatePropName) {\n    super(\"object\", attrName, propName, onChangeCallback);\n    if (this.propName) {\n      this.privatePropName = privatePropName || \"_\" + this.propName;\n    }\n  }\n\n  /**\n   *\n   * @param {PFElement} pfeInstance\n   */\n  defineProp(pfeInstance) {\n    this.getDefineFn(pfeInstance)(\n      this.propName,\n      this.privatePropName,\n      this.onChangeCallback\n    );\n  }\n\n  get attrIsObserved() {\n    return !!this.attrName;\n  }\n\n  onAttributeChangedLogic(pfeInstance, oldValue, newValue) {\n    if (this.propName) {\n      propsAndAttrsAPI.object.onChange.bind(pfeInstance)(\n        this.propName,\n        this.attrName,\n        oldValue,\n        newValue\n      );\n    }\n  }\n}\n\nexport class StringPropAndAttr extends PropAndAttr {\n  constructor(attrName, propName, onChangeCallback, privatePropName) {\n    super(\"string\", attrName, propName, onChangeCallback);\n    if (!this.attrName) {\n      this.privatePropName = privatePropName || \"_\" + this.propName;\n    }\n  }\n\n  /**\n   *\n   * @param {PFElement} pfeInstance\n   */\n  defineProp(pfeInstance) {\n    if (this.attrName) {\n      this.getDefineFn(pfeInstance)(this.propName, this.attrName);\n    } else {\n      Object.defineProperty(pfeInstance, this.propName, {\n        set: v => {\n          const oldValue = pfeInstance[this.privatePropName];\n          pfeInstance[this.privatePropName] = v;\n          if (this.onChangeCallback) {\n            this.onChangeCallback(pfeInstance, oldValue, v);\n          }\n        },\n        get: () => pfeInstance[this.privatePropName],\n        enumerable: true\n      });\n    }\n  }\n}\n\nexport class AliasPropAndAttr extends PropAndAttr {\n  constructor(attrName, propName, aliasedPropName, aliasedAttrName) {\n    super(\"alias\", attrName, propName, undefined);\n    this.aliasedPropName = aliasedPropName;\n    this.aliasedAttrName = aliasedAttrName;\n    if (!aliasedAttrName && !aliasedAttrName) {\n      throw new Error(\n        \"Aliased property has no aliasedPropName and aliasedAttrName\"\n      );\n    }\n  }\n\n  /**\n   *\n   * @param {PFElement} pfeInstance\n   */\n  defineProp(pfeInstance) {\n    if (this.aliasedPropName) {\n      this.getDefineFn(pfeInstance)(this.propName, this.aliasedPropName);\n    } else if (this.aliasedAttrName) {\n      Object.defineProperty(pfeInstance, this.propName, {\n        set: v => {\n          pfeInstance.setAttribute(this.aliasedAttrName, v);\n        },\n        get: () =>\n          pfeInstance.hasAttribute(this.aliasedAttrName) &&\n          pfeInstance.getAttribute(this.aliasedAttrName),\n        enumerable: true\n      });\n    }\n  }\n\n  get attrIsObserved() {\n    return !!this.attrName;\n  }\n\n  onAttributeChangedLogic(pfeInstance, oldValue, newValue) {\n    if (this.aliasedAttrName) {\n      pfeInstance.setAttribute(this.aliasedAttrName, newValue);\n    } else if (this.aliasedPropName) {\n      pfeInstance[this.aliasedPropName] = newValue;\n    }\n  }\n}\n\nexport class BooleanPropAndAttr extends PropAndAttr {\n  constructor(attrName, propName, onChangeCallback, privatePropName) {\n    super(\"boolean\", attrName, propName, onChangeCallback);\n    if (!attrName) {\n      this.privatePropName = privatePropName || \"_\" + propName;\n    }\n  }\n\n  defineProp(pfeInstance) {\n    if (this.attrName) {\n      this.getDefineFn(pfeInstance)(this.propName, this.attrName);\n    } else {\n      Object.defineProperty(pfeInstance, this.propName, {\n        set: v => {\n          const oldValue = pfeInstance[this.privatePropName];\n          pfeInstance[this.privatePropName] = !!v;\n          if (this.onChangeCallback) {\n            this.onChangeCallback(pfeInstance, oldValue, v);\n          }\n        },\n        get: () => pfeInstance[this.privatePropName],\n        enumerable: true\n      });\n    }\n  }\n}\n\nexport class FunctionPropAndAttr extends PropAndAttr {\n  constructor(attrName, propName, onChangeCallback, privatePropName) {\n    super(\"function\", attrName, propName, onChangeCallback);\n    if (!propName || typeof propName !== \"string\") {\n      throw new Error(\"propName must be a non-empty string for functions\");\n    }\n    this.privatePropName = privatePropName || \"_\" + propName;\n  }\n\n  defineProp(pfeInstance) {\n    this.getDefineFn(pfeInstance)(\n      this.propName,\n      this.privatePropName,\n      this.onChangeCallback\n    );\n  }\n\n  get attrIsObserved() {\n    return !!this.attrName;\n  }\n\n  onAttributeChangedLogic(pfeInstance, oldValue, newValue) {\n    propsAndAttrsAPI.object.onChange.bind(pfeInstance)(\n      this.propName,\n      this.attrName,\n      oldValue,\n      newValue\n    );\n  }\n}\n\nexport class NumberPropAndAttr extends PropAndAttr {\n  constructor(type, attrName, propName, onChangeCallback, privatePropName) {\n    super(type, attrName, propName, onChangeCallback);\n    if (!attrName || privatePropName) {\n      this.privatePropName = privatePropName || \"_\" + propName;\n    }\n  }\n\n  parse(value) {\n    return Number(value);\n  }\n\n  defineProp(pfeInstance) {\n    if (this.privatePropName && this.attrName) {\n      throw new Error(\n        \"Not implemented yet for \" + this.type + \" prop and attribute\"\n      );\n    } else if (this.attrName) {\n      Object.defineProperty(pfeInstance, this.propName, {\n        set: v => {\n          propsAndAttrsAPI.number.prop.setter.bind(pfeInstance)(\n            this.attrName,\n            v\n          );\n        },\n        get: () => {\n          if (pfeInstance.hasAttribute(this.attrName)) {\n            return this.parse(pfeInstance.getAttribute(this.attrName));\n          }\n        },\n        enumerable: true\n      });\n    } else {\n      Object.defineProperty(pfeInstance, this.propName, {\n        set: v => {\n          const oldValue = pfeInstance[this.privatePropName];\n          pfeInstance[this.privatePropName] = v;\n        },\n        get: () => pfeInstance[this.privatePropName],\n        enumerable: true\n      });\n    }\n  }\n\n  get attrIsObserved() {\n    return super.attrIsObserved || (this.privatePropName && this.attrName);\n  }\n\n  onAttributeChangedLogic(pfeInstance, oldValue, newValue) {\n    if (this.privatePropName && this.attrName) {\n      throw new Error(\n        \"Not implemented yet for \" + this.type + \" prop and attribute\"\n      );\n    } else {\n      const oldNum = this.parse(oldValue);\n      const newNum = this.parse(newValue);\n      this.onChangeCallback(pfeInstance, oldNum, newNum);\n    }\n  }\n}\n\nexport class IntPropAndAttr extends NumberPropAndAttr {\n  constructor(attrName, propName, onChangeCallback) {\n    super(\"integer\", attrName, propName, onChangeCallback);\n  }\n\n  parse(value) {\n    return parseInt(value);\n  }\n}\n\nexport class FloatPropAndAttr extends NumberPropAndAttr {\n  constructor(attrName, propName, onChangeCallback) {\n    super(\"float\", attrName, propName, onChangeCallback);\n  }\n\n  parse(value) {\n    return parseFloat(value);\n  }\n}\n\nconst errorWrapperElementNotDefined = new Error(\n  \"The wrapped element is not yet obtainable. The property must be set in a different way, or after the wrapped element is obtainable\"\n);\n\nexport class WrappedPropAndAttr extends PropAndAttr {\n  constructor(\n    attrName,\n    propName,\n    onChangeCallback,\n    getWrappedElementFn,\n    wrappedAttrName,\n    wrappedPropName\n  ) {\n    super(\"wrapped\", attrName, propName, onChangeCallback);\n    if (typeof getWrappedElementFn !== \"function\") {\n      throw new Error(\n        \"getWrappedElementFn must be a function that returns an html element for wrapped prop and attr type\"\n      );\n    }\n    if (!wrappedAttrName && !wrappedPropName) {\n      throw new Error(\n        \"one of wrappedAttrName and wrappedPropName must be defined, for wrapped prop and attr type\"\n      );\n    }\n    this.getWrappedElementFn = getWrappedElementFn;\n    this.wrappedAttrName = wrappedAttrName;\n    this.wrappedPropName = wrappedPropName;\n  }\n\n  updateAttrFromWrappedAttribute(pfeInstance) {\n    const wrappedEl = this.getWrappedElementFn(pfeInstance);\n    if (wrappedEl) {\n      if (wrappedEl.hasAttribute(this.wrappedAttrName)) {\n        pfeInstance.setAttribute(\n          this.attrName,\n          wrappedEl.getAttribute(this.wrappedAttrName)\n        );\n      } else {\n        pfeInstance.removeAttribute(this.attrName);\n      }\n    } else {\n      throw errorWrapperElementNotDefined;\n    }\n  }\n\n  updateWrappedAttribute(pfeInstance, value) {\n    const wrappedEl = this.getWrappedElementFn(pfeInstance);\n    if (wrappedEl) {\n      if (value != null) {\n        wrappedEl.setAttribute(this.wrappedAttrName, value);\n      } else {\n        wrappedEl.removeAttribute(this.wrappedAttrName);\n      }\n    } else {\n      throw errorWrapperElementNotDefined;\n    }\n  }\n\n  defineProp(pfeInstance) {\n    const attributes = { enumerable: true };\n\n    if (this.wrappedPropName) {\n      attributes.set = v => {\n        const wrappedEl = this.getWrappedElementFn(pfeInstance);\n        if (wrappedEl) {\n          const oldValue = pfeInstance[this.propName];\n          wrappedEl[this.wrappedPropName] = v;\n          if (this.wrappedAttrName && this.attrName) {\n            this.updateAttrFromWrappedAttribute(pfeInstance);\n          } else if (this.onChangeCallback) {\n            this.onChangeCallback(\n              pfeInstance,\n              oldValue,\n              pfeInstance[this.propName]\n            );\n          }\n        } else {\n          // this could be implemented in the future\n          throw errorWrapperElementNotDefined;\n        }\n        // to do! add onchange somewhere\n      };\n      attributes.get = () => {\n        const wrappedEl = this.getWrappedElementFn(pfeInstance);\n        if (wrappedEl) {\n          return wrappedEl[this.wrappedPropName];\n        } else {\n          throw errorWrapperElementNotDefined;\n        }\n      };\n    } else {\n      // wrappedAttrName\n\n      attributes.set = v => {\n        const wrappedEl = this.getWrappedElementFn(pfeInstance);\n        if (wrappedEl) {\n          const oldValue = pfeInstance[this.propName];\n          this.updateWrappedAttribute(pfeInstance, v);\n          if (this.attrName) {\n            this.updateAttrFromWrappedAttribute(pfeInstance);\n          } else if (this.onChangeCallback) {\n            this.onChangeCallback(\n              pfeInstance,\n              oldValue,\n              pfeInstance[this.propName]\n            );\n          }\n        } else {\n          throw errorWrapperElementNotDefined;\n        }\n      };\n      attributes.get = () => {\n        const wrappedEl = this.getWrappedElementFn(pfeInstance);\n        if (wrappedEl) {\n          if (wrappedEl.hasAttribute(this.wrappedAttrName)) {\n            return wrappedEl.getAttribute(this.wrappedAttrName);\n          }\n        } else {\n          throw errorWrapperElementNotDefined;\n        }\n      };\n    }\n\n    Object.defineProperty(pfeInstance, this.propName, attributes);\n  }\n\n  get attrIsObserved() {\n    return !!this.attrName;\n  }\n\n  onAttributeChangedLogic(pfeInstance, oldValue, newValue) {\n    const wrapperEl = this.getWrappedElementFn(pfeInstance);\n    if (wrapperEl) {\n      if (oldValue !== newValue) {\n        if (this.wrappedAttrName) {\n          this.updateWrappedAttribute(pfeInstance, newValue);\n          this.updateAttrFromWrappedAttribute(pfeInstance);\n        } else if (this.propName) {\n          pfeInstance[this.propName] = newValue;\n        }\n        if (this.onChangeCallback) {\n          this.onChangeCallback(pfeInstance, oldValue, newValue);\n        }\n      }\n    } else {\n      throw errorWrapperElementNotDefined;\n    }\n  }\n}\n","/*!\n * PatternFly Elements: PFElement 2.1.0-alpha.1\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport \"ie-array-find-polyfill\";\nimport \"string-includes-polyfill\";\nimport { autoReveal } from \"./reveal.js\";\nimport {\n  PropAndAttr,\n  WrappedPropAndAttr,\n  NumberPropAndAttr,\n  AliasPropAndAttr,\n  BooleanPropAndAttr,\n  FloatPropAndAttr,\n  FunctionPropAndAttr,\n  IntPropAndAttr,\n  ObjectPropAndAttr,\n  StringPropAndAttr\n} from \"./props-and-attrs\";\nconst prefix = \"pfe-\";\n\nclass PFElement extends HTMLElement {\n  static create(pfe) {\n    window.customElements.define(pfe.tag, pfe);\n  }\n\n  /**\n   *\n   * @returns {PropAndAttr[]}\n   */\n  static get propsAndAttrs() {\n    return [];\n  }\n\n  static get propsAndAttrsAPI() {\n    return {\n      alias: AliasPropAndAttr,\n      boolean: BooleanPropAndAttr,\n      float: FloatPropAndAttr,\n      function: FunctionPropAndAttr,\n      integer: IntPropAndAttr,\n      number: NumberPropAndAttr,\n      object: ObjectPropAndAttr,\n      string: StringPropAndAttr,\n      wrapped: WrappedPropAndAttr\n    };\n  }\n\n  propsAndAttrsConstructorLogic() {\n    this._pfeClass.propsAndAttrs.forEach(propAndAttrInstance =>\n      propAndAttrInstance.instanceConstructorLogic(this)\n    );\n  }\n\n  propsAndAttrsOnAttributeChangedLogic(attrName, oldValue, newValue) {\n    const foundElements = this._pfeClass.propsAndAttrs.filter(\n      propAndAttrInstance => propAndAttrInstance.attrName === attrName\n    );\n    if (foundElements.length) {\n      if (foundElements.length > 1) {\n        throw new Error(\n          \"more than one attribute with the same name has been defined in propAndAttr api\"\n        );\n      }\n      foundElements[0].onAttributeChangedLogic(this, oldValue, newValue);\n    }\n  }\n\n  static get propAndAttrsObservedAttributes() {\n    return this.propsAndAttrs\n      .filter(propAndAttrInstance => propAndAttrInstance.attrIsObserved)\n      .map(propAndAttrInstance => propAndAttrInstance.attrName);\n  }\n\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      PFElement._debugLog = !!preference;\n    }\n    return PFElement._debugLog;\n  }\n\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\"\n    };\n  }\n\n  static get version() {\n    return \"{{version}}\";\n  }\n\n  static get observedAttributes() {\n    return [\"pfe-theme\", ...this.propAndAttrsObservedAttributes];\n  }\n\n  get randomId() {\n    return Math.random()\n      .toString(36)\n      .substr(2, 9);\n  }\n\n  get version() {\n    return this._pfeClass.version;\n  }\n\n  get pfeType() {\n    return this.getAttribute(`${prefix}type`);\n  }\n\n  set pfeType(value) {\n    this.setAttribute(`${prefix}type`, value);\n  }\n\n  cssVariable(name, value, element = this) {\n    name = name.substr(0, 2) !== \"--\" ? \"--\" + name : name;\n    if (value) {\n      element.style.setProperty(name, value);\n    }\n    return window\n      .getComputedStyle(element)\n      .getPropertyValue(name)\n      .trim();\n  }\n\n  // Returns a single element assigned to that slot; if multiple, it returns the first\n  has_slot(name) {\n    return this.querySelector(`[slot='${name}']`);\n  }\n\n  // Returns an array with all elements assigned to that slot\n  has_slots(name) {\n    return [...this.querySelectorAll(`[slot='${name}']`)];\n  }\n\n  // Update the theme context for self and children\n  context_update() {\n    const children = this.querySelectorAll(\"[pfelement]\");\n    let theme = this.cssVariable(\"theme\");\n\n    // Manually adding `pfe-theme` overrides the css variable\n    if (this.hasAttribute(\"pfe-theme\")) {\n      theme = this.getAttribute(\"pfe-theme\");\n      // Update the css variable to match the data attribute\n      this.cssVariable(\"theme\", theme);\n    }\n\n    // Update theme for self\n    this.context_set(theme);\n\n    // For each nested, already upgraded component\n    // set the context based on the child's value of --theme\n    // Note: this prevents contexts from parents overriding\n    // the child's context should it exist\n    [...children].map(child => {\n      if (child.connected) {\n        child.context_set(theme);\n      }\n    });\n  }\n\n  // Get the theme variable if it exists, set it as an attribute\n  context_set(fallback) {\n    let theme = this.cssVariable(\"theme\");\n    if (!theme) {\n      theme = this.getAttribute(\"pfe-theme\");\n    }\n    if (!theme && fallback) {\n      theme = fallback;\n    }\n    if (theme) {\n      this.setAttribute(\"on\", theme);\n    }\n  }\n\n  constructor(\n    pfeClass,\n    { type = null, delayRender = false, customRendering = false } = {}\n  ) {\n    super();\n\n    this.connected = false;\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this.props = pfeClass.properties;\n    this.slots = pfeClass.slots;\n    this._queue = [];\n\n    if (type) {\n      this._queueAction({\n        type: \"setProperty\",\n        data: {\n          name: \"pfeType\",\n          value: type\n        }\n      });\n    }\n\n    this._connectedCallback = this._connectedCallback.bind(this);\n    this._observer = new MutationObserver(this._connectedCallback); // not used yet, just created\n\n    if (!customRendering) {\n      this.template = document.createElement(\"template\");\n\n      this.log(`Constructing...`);\n\n      if (this.tag !== \"pfe-table\") {\n        this.attachShadow({ mode: \"open\" });\n      }\n\n      if (\n        !delayRender &&\n        (this.tag !== \"pfe-navigation\" ||\n          this.tag !== \"pfe-navigation-main\" ||\n          this.tag !== \"pfe-navigation-item\" ||\n          this.tag !== \"pfe-card\")\n      ) {\n        if (!delayRender) {\n          this.log(`Render...`);\n          this.render();\n          this.log(`Rendered.`);\n        }\n      } else {\n        if (this.tag !== \"pfe-table\") {\n          this.shadowRoot.innerHTML = `<slot></slot>`;\n        }\n      }\n    }\n\n    this.propsAndAttrsConstructorLogic();\n  }\n\n  connectedCallback() {\n    if (\n      this.tag === \"pfe-navigation\" ||\n      this.tag === \"pfe-navigation-main\" ||\n      this.tag === \"pfe-navigation-item\" ||\n      this.tag === \"pfe-card\"\n    ) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          if (this.children.length) {\n            this.render();\n            this._connectedCallback();\n            return resolve();\n          }\n\n          this._observer.observe(this, { childList: true });\n        }, 0);\n      });\n    } else {\n      this._connectedCallback();\n    }\n  }\n\n  _connectedCallback() {\n    this.connected = true;\n    this.log(`Connecting...`);\n\n    if (this.tag !== \"pfe-table\" && window.ShadyCSS) {\n      this.log(`Styling...`);\n      window.ShadyCSS.styleElement(this);\n      // this.temporaryFixIE11EdgeSlotted();\n      this.log(`Styled.`);\n    }\n\n    // Throw a warning if the on attribute was manually added before upgrade\n    if (!this.hasAttribute(\"pfelement\") && this.hasAttribute(\"on\")) {\n      console.warn(\n        `${this.tag}${\n          this.id ? `[#${this.id}]` : ``\n        }: The \"on\" attribute is protected and should not be manually added to a component. The base class will manage this value for you on upgrade.`\n      );\n    }\n\n    // @TODO maybe we should use just the attribute instead of the class?\n    // https://github.com/angular/angular/issues/15399#issuecomment-318785677\n    this.classList.add(\"PFElement\");\n    this.setAttribute(\"pfelement\", \"\");\n\n    if (typeof this.props === \"object\") {\n      this._mapSchemaToProperties(this.tag, this.props);\n      this.log(`Properties attached.`);\n    }\n\n    if (typeof this.slots === \"object\") {\n      this._mapSchemaToSlots(this.tag, this.slots);\n      this.log(`Slots attached.`);\n    }\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n\n    // Initialize the on attribute if a theme variable is set\n    // do not update the on attribute if a user has manually added it\n    // then trigger an update in nested components\n    this.context_update();\n\n    this.log(`Connected.`);\n  }\n\n  temporaryFixIE11EdgeSlotted() {\n    // ENABLE THIS PATCH WHEN SLOT ARE NOT SUPPORTED\n    const tagName = `${this.tag}`;\n    const getStyleTag = document.head.querySelector(`[scope^=${tagName}]`);\n\n    if (getStyleTag) {\n      let style = Array.from(document.styleSheets).find(item => {\n        if (\n          item.ownerNode &&\n          item.ownerNode.getAttribute(\"scope\").indexOf(tagName) !== -1\n        ) {\n          return item;\n        }\n        return null;\n      });\n      if (style) {\n        let dynamicSlot = \"\";\n        Array.from(style.cssRules || style.rules || []).forEach(rule => {\n          if (\n            rule.selectorText &&\n            typeof rule.cssText === \"string\" &&\n            rule.selectorText.indexOf(\"slot\") > -1\n          ) {\n            dynamicSlot += \" \" + rule.cssText.replace(/>/gi, \"\");\n          } else if (rule && typeof rule.cssText === \"string\") {\n            dynamicSlot += \" \" + rule.cssText;\n          }\n        });\n        if (dynamicSlot) {\n          getStyleTag.innerText = dynamicSlot;\n        }\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this._observer.disconnect();\n    this.log(`Disconnecting...`);\n\n    this.connected = false;\n\n    this.log(`Disconnected.`);\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (this._pfeClass.cascadingAttributes) {\n      const cascadeTo = this._pfeClass.cascadingAttributes[attr];\n      if (cascadeTo) {\n        this._copyAttribute(attr, cascadeTo);\n      }\n\n      if (attr === \"pfe-theme\") {\n        this.context_update();\n      }\n    }\n\n    this.propsAndAttrsOnAttributeChangedLogic(attr, oldVal, newVal);\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [\n      ...this.querySelectorAll(to),\n      ...this.shadowRoot.querySelectorAll(to)\n    ];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  // Map the imported properties json to real props on the element\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToProperties(tag, properties) {\n    this.log(\"Mapping properties...\");\n    // Loop over the properties provided by the schema\n    Object.keys(properties).forEach(attr => {\n      let data = properties[attr];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof data === \"object\") {\n        // Prefix default is true\n        let hasPrefix = true;\n        let attrName = attr;\n        // Set the attribute's property equal to the schema input\n        this[attr] = data;\n        // Initialize the value to null\n        this[attr].value = null;\n\n        if (typeof this[attr].prefixed !== \"undefined\") {\n          hasPrefix = this[attr].prefixed;\n        }\n\n        if (hasPrefix) {\n          attrName = `${prefix}${attr}`;\n        }\n\n        // If the attribute exists on the host\n        if (this.hasAttribute(attrName)) {\n          // Set property value based on the existing attribute\n          this[attr].value = this.getAttribute(attrName);\n        }\n        // Otherwise, look for a default and use that instead\n        else if (data.default) {\n          const dependency_exists = this._hasDependency(tag, data.options);\n          const no_dependencies =\n            !data.options ||\n            (data.options && !data.options.dependencies.length);\n          // If the dependency exists or there are no dependencies, set the default\n          if (dependency_exists || no_dependencies) {\n            this.setAttribute(attrName, data.default);\n            this[attr].value = data.default;\n          }\n        }\n      }\n    });\n\n    this.log(\"Properties mapped.\");\n  }\n\n  // Test whether expected dependencies exist\n  _hasDependency(tag, opts) {\n    // Get any possible dependencies for this attribute to exist\n    let dependencies = opts ? opts.dependencies : [];\n    // Initialize the dependency return value\n    let hasDependency = false;\n    // Check that dependent item exists\n    // Loop through the dependencies defined\n    for (let i = 0; i < dependencies.length; i += 1) {\n      const slot_exists =\n        dependencies[i].type === \"slot\" &&\n        this.has_slots(`${tag}--${dependencies[i].id}`).length > 0;\n      const attribute_exists =\n        dependencies[i].type === \"attribute\" &&\n        this.getAttribute(`${prefix}${dependencies[i].id}`);\n      // If the type is slot, check that it exists OR\n      // if the type is an attribute, check if the attribute is defined\n      if (slot_exists || attribute_exists) {\n        // If the slot does exist, add the attribute with the default value\n        hasDependency = true;\n        // Exit the loop\n        break;\n      }\n    }\n    // Return a boolean if the dependency exists\n    return hasDependency;\n  }\n\n  // Map the imported slots json\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToSlots(tag, slots) {\n    this.log(\"Validate slots...\");\n    // Loop over the properties provided by the schema\n    Object.keys(slots).forEach(slot => {\n      let slotObj = slots[slot];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof slotObj === \"object\") {\n        let slotExists = false;\n        let result = [];\n        // If it's a named slot, look for that slot definition\n        if (slotObj.namedSlot) {\n          // Check prefixed slots\n          result = this.has_slots(`${tag}--${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n\n          // Check for unprefixed slots\n          result = this.has_slots(`${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n          // If it's the default slot, look for direct children not assigned to a slot\n        } else {\n          result = [...this.children].filter(\n            child => !child.hasAttribute(\"slot\")\n          );\n\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n        }\n\n        // If the slot exists, attach an attribute to the parent to indicate that\n        if (slotExists) {\n          this.setAttribute(`has_${slot}`, \"\");\n        } else {\n          this.removeAttribute(`has_${slot}`);\n        }\n      }\n    });\n    this.log(\"Slots validated.\");\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  // @TODO This is a duplicate function to cssVariable above, combine them\n  static var(name, element = document.body) {\n    return window\n      .getComputedStyle(element)\n      .getPropertyValue(name)\n      .trim();\n  }\n\n  var(name) {\n    return PFElement.var(name, this);\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  log(...msgs) {\n    PFElement.log(`[${this.tag}]`, ...msgs);\n  }\n\n  emitEvent(\n    name,\n    { bubbles = true, cancelable = false, composed = false, detail = {} } = {}\n  ) {\n    this.log(`Custom event: ${name}`);\n    this.dispatchEvent(\n      new CustomEvent(name, {\n        bubbles,\n        cancelable,\n        composed,\n        detail\n      })\n    );\n  }\n\n  getUniqueId(prefix = \"id\") {\n    let id = prefix;\n    for (let i = 1; document.getElementById(id); i++) {\n      id = prefix + \"-\" + i;\n    }\n    return id;\n  }\n}\n\nautoReveal(PFElement.log);\n\nexport default PFElement;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","obj","len","length","thisArg","arguments","index","iValue","call","String","includes","search","start","indexOf","logger","handleWebComponentsReady","window","document","body","removeAttribute","propsAndAttrsAPI","object","prop","setter","privatePropName","onChange","oldValue","getter","define","propName","set","v","bind","get","enumerable","attr","parse","stringValue","JSON","attrName","newValue","alias","aliasedPropName","boolean","setAttribute","hasAttribute","getAttribute","onChangeCallback","hasChanged","string","function","fn","Function","e","parseFunction","number","isNaN","PropAndAttr","[object Object]","type","Error","attrIsObserved","pfeInstance","defineProp","getDefineFn","ObjectPropAndAttr","super","StringPropAndAttr","AliasPropAndAttr","aliasedAttrName","undefined","BooleanPropAndAttr","FunctionPropAndAttr","NumberPropAndAttr","Number","oldNum","newNum","IntPropAndAttr","parseInt","FloatPropAndAttr","parseFloat","errorWrapperElementNotDefined","WrappedPropAndAttr","getWrappedElementFn","wrappedAttrName","wrappedPropName","wrappedEl","attributes","updateAttrFromWrappedAttribute","updateWrappedAttribute","prefix","PFElement","HTMLElement","pfe","customElements","tag","propsAndAttrs","float","integer","wrapped","_pfeClass","forEach","propAndAttrInstance","instanceConstructorLogic","foundElements","filter","onAttributeChangedLogic","propAndAttrsObservedAttributes","map","preference","_debugLog","msgs","debugLog","console","log","PfeTypes","Container","Content","Combo","version","observedAttributes","randomId","Math","random","toString","substr","pfeType","name","element","style","setProperty","getComputedStyle","getPropertyValue","trim","querySelector","querySelectorAll","children","theme","cssVariable","context_set","child","connected","fallback","pfeClass","delayRender","customRendering","props","properties","slots","_queue","_queueAction","data","_connectedCallback","_observer","MutationObserver","template","createElement","attachShadow","mode","shadowRoot","innerHTML","render","propsAndAttrsConstructorLogic","Promise","resolve","setTimeout","observe","childList","ShadyCSS","styleElement","warn","id","classList","add","_mapSchemaToProperties","_mapSchemaToSlots","_processQueue","context_update","tagName","getStyleTag","head","from","styleSheets","item","ownerNode","dynamicSlot","cssRules","rules","rule","selectorText","cssText","replace","innerText","disconnect","oldVal","newVal","cascadingAttributes","cascadeTo","_copyAttribute","propsAndAttrsOnAttributeChangedLogic","to","recipients","fname","node","keys","hasPrefix","prefixed","default","dependency_exists","_hasDependency","options","no_dependencies","dependencies","opts","hasDependency","i","slot_exists","has_slots","attribute_exists","slot","slotObj","slotExists","result","namedSlot","nodes","action","push","var","html","prepareTemplate","appendChild","content","cloneNode","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","getElementById","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","addEventListener","autoReveal"],"mappings":"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"}